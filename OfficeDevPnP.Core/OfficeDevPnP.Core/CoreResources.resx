<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthenticationManager_GetContext" xml:space="preserve">
    <value>Getting authentication context for '{0}'</value>
  </data>
  <data name="AuthenticationManager_TenantUser" xml:space="preserve">
    <value>Tenant user '{0}'</value>
  </data>
  <data name="AuthenticationManger_ProblemDeterminingTokenLease" xml:space="preserve">
    <value>Could not determine lease for appOnlyAccessToken.</value>
  </data>
  <data name="BrandingExtension_AddThemeOption" xml:space="preserve">
    <value>Adding theme option '{0}' to '{1}'</value>
  </data>
  <data name="BrandingExtension_DeployMasterPage" xml:space="preserve">
    <value>Deploying masterpage '{0}' to '{1}'.</value>
  </data>
  <data name="BrandingExtension_DeployPageLayout" xml:space="preserve">
    <value>Deploying page layout '{0}' to '{1}'.</value>
  </data>
  <data name="BrandingExtension_DeployTheme" xml:space="preserve">
    <value>Deploying theme '{0}' to '{1}'</value>
  </data>
  <data name="BrandingExtension_DeployThemeFile" xml:space="preserve">
    <value>Deploying file '{0}' to '{1}' folder '{2}'.</value>
  </data>
  <data name="BrandingExtension_SetCustomMasterUrl" xml:space="preserve">
    <value>Setting custom master URL '{0}' to '{1}'.</value>
  </data>
  <data name="BrandingExtension_SetMasterUrl" xml:space="preserve">
    <value>Setting master URL '{0}' to '{1}'.</value>
  </data>
  <data name="BrandingExtension_SetTheme" xml:space="preserve">
    <value>Setting theme '{0}' for '{1}'</value>
  </data>
  <data name="BrandingExtension_ThemeMissing" xml:space="preserve">
    <value>Theme '{0}' not found.</value>
  </data>
  <data name="BrandingExtension_ThemeNotOverwritten" xml:space="preserve">
    <value>Theme '{0}' already exists (and was not overwritten). No changes made.</value>
  </data>
  <data name="Exception_Message_EmptyString_Arg" xml:space="preserve">
    <value>The passed argument is a zero-length string or contains only whitespace.</value>
  </data>
  <data name="FeatureExtensions_ActivateSiteCollectionFeature" xml:space="preserve">
    <value>Activating feature {0} in site collection.</value>
  </data>
  <data name="FeatureExtensions_ActivateWebFeature" xml:space="preserve">
    <value>Activating feature {0} in web.</value>
  </data>
  <data name="FeatureExtensions_DeactivateSiteCollectionFeature" xml:space="preserve">
    <value>Deactivating feature {0} in site collection.</value>
  </data>
  <data name="FeatureExtensions_DeactivateWebFeature" xml:space="preserve">
    <value>Deactivating feature {0} in web.</value>
  </data>
  <data name="FeatureExtensions_FeatureActivationProblem" xml:space="preserve">
    <value>Problem with activation for feature id {0}.</value>
  </data>
  <data name="FieldAndContentTypeExtensions_AddField0ToContentType1" xml:space="preserve">
    <value>Adding field ({0}) to content type ({1}).</value>
  </data>
  <data name="FieldAndContentTypeExtensions_ContentType01AlreadyExists" xml:space="preserve">
    <value>Content type '{0}' ({1}) already exists; no changes made.</value>
  </data>
  <data name="FieldAndContentTypeExtensions_CreateContentType01" xml:space="preserve">
    <value>Creating content type '{0}' ({1}).</value>
  </data>
  <data name="FieldAndContentTypeExtensions_CreateDocumentSet" xml:space="preserve">
    <value>Creating document set '{0}'.</value>
  </data>
  <data name="FieldAndContentTypeExtensions_CreateField01" xml:space="preserve">
    <value>Creating field '{0}' ({1}).</value>
  </data>
  <data name="FieldAndContentTypeExtensions_CreateFieldBase" xml:space="preserve">
    <value>New Field as XML: {0}</value>
  </data>
  <data name="FieldAndContentTypeExtensions_Field01AlreadyExists" xml:space="preserve">
    <value>Field '{0}' ({1}) already exists; no changes made.</value>
  </data>
  <data name="FileFolderExtensions_FolderMissing" xml:space="preserve">
    <value>Target folder does not exist in the web. Web: {0}, Folder: {1}</value>
  </data>
  <data name="FileFolderExtensions_LibraryMissing" xml:space="preserve">
    <value>Target library does not exist in the web. Web: {0}, List: {1}</value>
  </data>
  <data name="FileFolderExtensions_UploadFile" xml:space="preserve">
    <value>Uploading file '{0}' to folder '{1}'.</value>
  </data>
  <data name="LoggingUtility_MessageWithException" xml:space="preserve">
    <value>{0}; EXCEPTION: {{{1}}}</value>
  </data>
  <data name="MailUtility_SendMailCancelled" xml:space="preserve">
    <value>Mail message was canceled.</value>
  </data>
  <data name="MailUtility_SendFailed" xml:space="preserve">
    <value>Mail message could not be sent. Send completed with error.</value>
  </data>
  <data name="MailUtility_SendException" xml:space="preserve">
    <value>Mail message could not be sent. SMTP exception attempting to send.</value>
  </data>
  <data name="MailUtility_SendExceptionRethrow0" xml:space="preserve">
    <value>Mail message could not be sent. Exception attempting to send email, rethrowing. Exception: {0}</value>
  </data>
  <data name="TenantExtensions_ClosedContextWarning" xml:space="preserve">
    <value>ClientContext gets closed after action is completed. Calling ExecuteQuery again returns an error. Verify that you have an open ClientContext object.</value>
  </data>
  <data name="TenantExtensions_UnknownExceptionAccessingSite" xml:space="preserve">
    <value>Could not determine if site exists in tenant.</value>
  </data>
  <data name="WebExtensions_CreateWeb" xml:space="preserve">
    <value>Creating web '{0}' with template '{1}'.</value>
  </data>
  <data name="WebExtensions_DeleteWeb" xml:space="preserve">
    <value>Deleting web '{0}'.</value>
  </data>
  <data name="WebExtensions_InstallSolution" xml:space="preserve">
    <value>Installing sandbox solution '{0}' to '{1}'.</value>
  </data>
  <data name="WebExtensions_RemoveAppInstance" xml:space="preserve">
    <value>Removing app '{0}' instance {1}.</value>
  </data>
  <data name="WebExtensions_SiteSearchUnhandledException" xml:space="preserve">
    <value>Site search error.</value>
  </data>
  <data name="WebExtensions_UninstallSolution" xml:space="preserve">
    <value>Removing sandbox solution '{0}'</value>
  </data>
</root>